include:
  - template: Code-Quality.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml

stages:
  - test

code_quality:
  services:            # Shut off Docker-in-Docker
  tags:
    - codequality-no-dind
  variables:
    REPORT_FORMAT: html
  artifacts:
    paths: [gl-code-quality-report.html]
  rules:
    - if: '$CODE_QUALITY_DISABLED'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"' # Run code quality job in merge request pipelines
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'      # Run code quality job in pipelines on the default branch (but not in other branch pipelines)
    - if: '$CI_COMMIT_TAG'                               # Run code quality job in pipelines for tags

# Create unit test and coverage reports.
coverage:
  image:
    name: golang:1.17
  stage: test
  coverage: '/total:\s+\(statements\)\s+(\d+\.\d+\%)/'
  before_script:
    - go install github.com/jstemmer/go-junit-report@v0.9.1
    - go install github.com/t-yuki/gocover-cobertura@latest
    - "go get -d"
  script:
    - go test -v -coverprofile=coverage.out 2>&1 | go-junit-report -set-exit-code > report.xml
    - go tool cover -func coverage.out
  after_script:
    - cat coverage.out | gocover-cobertura > coverage.xml
  artifacts:
    reports:
      junit: report.xml
      cobertura: coverage.xml